
name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  RUNNER_PATH: "/home/runner/work/do-it-client/do-it-client"
  AWS_DEPLOY_PATH: "/home/ubuntu/do-it-deploy"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js 14.18
        uses: actions/setup-node@v1
        with:
          node-version: '14.18'
          
      - name: Install yarn and run unittest
        run: |
          yarn
          yarn test
          
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker build & push to push
        run: |
          docker build -t ${{secrets.DOCKER_REPO}} .
          docker tag ${{secrets.DOCKER_REPO}}:latest ${{secrets.DOCKERHUB_USERNAME}}/${{secrets.DOCKER_REPO}}:latest
          docker push ${{secrets.DOCKERHUB_USERNAME}}/${{secrets.DOCKER_REPO}}
          
      - uses: actions/checkout@master
      - name: deploy file transfer by scp
        uses: siva1024/scp-deployer@latest
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PEM_KEY }}
          source: "${{ env.RUNNER_PATH }}/deploy/deploy.sh"
          target: "${{ env.AWS_DEPLOY_PATH }}/script/client/deploy.sh"

      - uses: actions/checkout@master
      - name: compose-red file transfer by scp
        uses: siva1024/scp-deployer@latest
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PEM_KEY }}
          source: "${{ env.RUNNER_PATH }}/deploy/docker-compose/docker-compose.red.yml"
          target: "${{ env.AWS_DEPLOY_PATH }}/docker/client/"

      - uses: actions/checkout@master
      - name: compose-green file transfer by scp
        uses: siva1024/scp-deployer@latest
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PEM_KEY }}
          source: "${{ env.RUNNER_PATH }}/deploy/docker-compose/docker-compose.green.yml"
          target: "${{ env.AWS_DEPLOY_PATH }}/docker/client/"

      - name: deploy docker image to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PEM_KEY }}
          script: |
            sudo docker pull ${{secrets.DOCKERHUB_USERNAME}}/${{secrets.DOCKER_REPO}}
            sudo chmod -R 777 do-it-deploy
            sudo chown -R ubuntu do-it-deploy
            BASH_RESULT=$(sh ${{ env.AWS_DEPLOY_PATH }}/script/client/deploy.sh | tail -1)
            echo "${BASH_RESULT}"
